{"ast":null,"code":"const storeCartItems = cartItems => {\n  const cart = cartItems.length > 0 ? cartItems : [];\n  localStorage.setItem('cart', JSON.stringify(cart));\n};\n\nexport const sumItems = cartItems => {\n  storeCartItems(cartItems);\n  return {\n    itemCount: cartItems.reduce((total, product) => total + product.quantity, 0),\n    total: cartItems.reduce((total, product) => total + product.price * product.quantity, 0)\n  };\n};\n\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case 'ADD_ITEM':\n      //check if item is in cart\n      if (!state.cartItems.find(item => item.id === action.payload.id)) {\n        state.cartItems.push({ ...action.payload,\n          quantity: 1\n        });\n      }\n\n      return { ...state,\n        cartItems: [...state.cartItems],\n        ...sumItems(state.cartItems)\n      };\n\n    case 'INCREASE':\n      const increaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n      state.cartItems[increaseIndex].quantity++;\n      return { ...state,\n        cartItems: [...state.cartItems],\n        ...sumItems(state.cartItems)\n      };\n\n    case 'DECREASE':\n      const decreaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\n      const product = state.cartItems[decreaseIndex];\n\n      if (product.quantity > 1) {\n        product.quantity--;\n      }\n\n      return { ...state,\n        cartItems: [...state.cartItems],\n        ...sumItems(state.cartItems)\n      };\n\n    case 'REMOVE_ITEM':\n      const newCartItems = state.cartItems.filter(item => item.id !== action.payload.id);\n      return { ...state,\n        cartItems: [...newCartItems],\n        ...sumItems(newCartItems)\n      };\n\n    case 'CLEAR':\n      localStorage.removeItem('cart');\n      return {\n        cartItems: [],\n        itemCount: 0,\n        total: 0\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["C:/Users/hbago/Desktop/Projets/react-ecommerce/client/src/context/cartReducer.js"],"names":["storeCartItems","cartItems","cart","length","localStorage","setItem","JSON","stringify","sumItems","itemCount","reduce","total","product","quantity","price","cartReducer","state","action","type","find","item","id","payload","push","increaseIndex","findIndex","decreaseIndex","newCartItems","filter","removeItem"],"mappings":"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","sourcesContent":["const storeCartItems = (cartItems) => {\r\n    const cart = cartItems.length > 0 ? cartItems : [];\r\n    localStorage.setItem('cart', JSON.stringify(cart));\r\n}\r\n\r\nexport  const sumItems = cartItems => {\r\n    storeCartItems(cartItems);\r\n    return {\r\n        itemCount: cartItems.reduce((total, product)=> total + product.quantity , 0),\r\n        total: cartItems.reduce((total,product)=> total + (product.price * product.quantity), 0)\r\n    }\r\n}\r\n\r\nconst cartReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_ITEM':\r\n            //check if item is in cart\r\n            if(!state.cartItems.find(item => item.id === action.payload.id)) {\r\n                state.cartItems.push({\r\n                    ...action.payload,\r\n                    quantity: 1,\r\n                })\r\n            }\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems)\r\n            }\r\n        case 'INCREASE':\r\n            const increaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            state.cartItems[increaseIndex].quantity++;\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems),\r\n            }\r\n        case 'DECREASE':\r\n            const decreaseIndex = state.cartItems.findIndex(item => item.id === action.payload.id);\r\n            const product = state.cartItems[decreaseIndex];\r\n            if (product.quantity > 1) {\r\n                product.quantity--;\r\n            }\r\n            return {\r\n                ...state,\r\n                cartItems: [...state.cartItems],\r\n                ...sumItems(state.cartItems),\r\n            }\r\n        case 'REMOVE_ITEM':\r\n            const newCartItems = state.cartItems.filter(item => item.id !== action.payload.id);\r\n            return {\r\n                ...state,\r\n                cartItems: [...newCartItems],\r\n                ...sumItems(newCartItems),\r\n            }\r\n        case 'CLEAR':\r\n            localStorage.removeItem('cart');\r\n            return {\r\n                cartItems: [],\r\n                itemCount: 0,\r\n                total: 0,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}