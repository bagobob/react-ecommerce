{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hbago\\\\Desktop\\\\react-ecommerce\\\\client\\\\src\\\\context\\\\CartContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport cartReducer, { sumItems } from \"./cartReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst cartFromStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\nconst initialState = {\n  cartItems: cartFromStorage,\n  ...sumItems(cartFromStorage)\n};\n\nconst CartContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n\n  const addProduct = product => dispatch({\n    type: 'ADD_ITEM',\n    payload: product\n  });\n\n  const increase = product => dispatch({\n    type: 'INCREASE',\n    payload: product\n  });\n\n  const decrease = product => dispatch({\n    type: 'DECREASE',\n    payload: product\n  });\n\n  const remove = product => dispatch({\n    type: 'REMOVE_ITEM',\n    payload: product\n  });\n\n  const clearCart = () => dispatch({\n    type: 'CLEAR'\n  });\n\n  const contextValues = { ...state,\n    addProduct,\n    increase,\n    decrease,\n    remove,\n    clearCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: contextValues,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartContextProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = CartContextProvider;\nexport default CartContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartContextProvider\");","map":{"version":3,"sources":["C:/Users/hbago/Desktop/react-ecommerce/client/src/context/CartContext.jsx"],"names":["React","createContext","useReducer","cartReducer","sumItems","CartContext","cartFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","CartContextProvider","children","state","dispatch","addProduct","product","type","payload","increase","decrease","remove","clearCart","contextValues"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAgD,OAAhD;AACA,OAAOC,WAAP,IAAsBC,QAAtB,QAAsC,eAAtC;;AAEA,OAAO,MAAMC,WAAW,gBAAEJ,aAAa,EAAhC;AACP,MAAMK,eAAe,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,IAA+BC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAA/B,GAA0E,EAAlG;AAEA,MAAMG,YAAY,GAAG;AAAEC,EAAAA,SAAS,EAAEN,eAAb;AAA8B,KAAGF,QAAQ,CAACE,eAAD;AAAzC,CAArB;;AAEA,MAAMO,mBAAmB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACC,WAAD,EAAcQ,YAAd,CAApC;;AACA,QAAMM,UAAU,GAAIC,OAAD,IAAaF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,OAAO,EAAEF;AAA7B,GAAD,CAAxC;;AACA,QAAMG,QAAQ,GAAIH,OAAD,IAAaF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,OAAO,EAAEF;AAA7B,GAAD,CAAtC;;AACA,QAAMI,QAAQ,GAAIJ,OAAD,IAAaF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,UAAR;AAAoBC,IAAAA,OAAO,EAAEF;AAA7B,GAAD,CAAtC;;AACA,QAAMK,MAAM,GAAIL,OAAD,IAAaF,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE,aAAR;AAAuBC,IAAAA,OAAO,EAAEF;AAAhC,GAAD,CAApC;;AACA,QAAMM,SAAS,GAAG,MAAMR,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAhC;;AAEA,QAAMM,aAAa,GAAG,EAClB,GAAGV,KADe;AAElBE,IAAAA,UAFkB;AAGlBI,IAAAA,QAHkB;AAIlBC,IAAAA,QAJkB;AAKlBC,IAAAA,MALkB;AAMlBC,IAAAA;AANkB,GAAtB;AAQA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAGC,aAA9B;AAAA,cAEQX;AAFR;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAvBD;;GAAMD,mB;;KAAAA,mB;AAyBN,eAAeA,mBAAf","sourcesContent":["import React, { createContext, useReducer} from \"react\";\r\nimport cartReducer, { sumItems } from \"./cartReducer\";\r\n\r\nexport const CartContext =createContext();\r\nconst cartFromStorage = localStorage.getItem('cart') ? JSON.parse(localStorage.getItem('cart')) : [];\r\n\r\nconst initialState = { cartItems: cartFromStorage, ...sumItems(cartFromStorage) };\r\n\r\nconst CartContextProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(cartReducer, initialState);\r\n    const addProduct = (product) => dispatch({ type: 'ADD_ITEM', payload: product});\r\n    const increase = (product) => dispatch({ type: 'INCREASE', payload: product});\r\n    const decrease = (product) => dispatch({ type: 'DECREASE', payload: product});\r\n    const remove = (product) => dispatch({ type: 'REMOVE_ITEM', payload: product});\r\n    const clearCart = () => dispatch({ type: 'CLEAR'});\r\n\r\n    const contextValues = {\r\n        ...state,\r\n        addProduct,\r\n        increase,\r\n        decrease,\r\n        remove,\r\n        clearCart,\r\n    }\r\n    return (\r\n        <CartContext.Provider value={ contextValues }>\r\n            {\r\n                children\r\n            }\r\n        </CartContext.Provider>\r\n    );\r\n}\r\n\r\nexport default CartContextProvider;"]},"metadata":{},"sourceType":"module"}